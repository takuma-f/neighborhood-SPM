# coding: UTF-8
from svm import *
from svmutil import *

#学習(訓練)データを読み込む
y, x = svm_read_problem('train.txt')
prob = svm_problem(y, x)

#パラメタを設定する(-s: C SVC, NU SVC, ONE CLASS, EPSILON SVR,NU SVR の中からサポートベクタマシンの種類を選択する. -t:使用カーネル, 0は線形デフォルトは2のRBF、詳細は知らん。)
param = svm_parameter('-s 0 -t 0')

#学習(訓練)して分類モデルをつくる
m = svm_train(prob, param)

#モデルをファイルに書き出す
svm_save_model('model_file', m)

#テスト(評価)データを読み込む
yt, xt = svm_read_problem('test.txt')

#テスト(評価)データの中身を表示する
print 'y(ラベル) = %s' % yt      # 1 or -1の2値(2クラス)
print 'x(toto投票率) = %s' % xt

#予測する
p_label, p_acc, p_val = svm_predict(yt, xt, m )

print '予測値 = %s' % p_label #予測されたラベル 1:この買目はくる!　-1:この買目はこない!
print '正確度 = %s\n平均二乗誤差 = %s\n重相関係数 = %s' % p_acc
print '判別結果 = %s' % p_val


# WANKOSOBA:Program Admin$ python svmsample.py
# *
# optimization finished, #iter = 5
# nu = 0.679071
# obj = -22.411527, rho = -0.374857
# nSV = 10, nBSV = 8
# Total nSV = 10
# y(ラベル) = [1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0]
# x(toto投票率) = [{1: 0.8469}, {1: 0.8448}, {1: 0.7866}, {1: 0.7091}, {1: 0.6987}, {1: 0.6722}, {1: 0.5408}, {1: 0.5393}, {1: 0.4822}, {1: 0.4552}, {1: 0.3516}, {1: 0.3409}]
# Accuracy = 58.3333% (7/12) (classification)
# 予測値 = [1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]
# 正確度 = 58.3333333333
# 平均二乗誤差 = 1.66666666667
# 重相関係数 = 0.0285714285714
# 判別結果 = [[0.8129081047675253], [0.8027608942498623], [0.5181344763233717], [0.13585502723954557], [0.08491468388885703], [-0.04396648352387045], [-0.6476156830518778], [-0.6540294353487863], [-0.8876883161470612], [-0.990394674828857], [-1.3308211117910553], [-1.3607355173869582]]